<?xml version="1.0" encoding="UTF-8" standalone="no"?><umlet_diagram><help_text>// Uncomment the following line to change the fontsize:
// fontsize=14

// Welcome to UMLet!
//
// Double-click on UML elements to add them to the diagram.
// Edit element properties by modifying the text in this panel.
// Edit the files in the 'palettes' directory to create your own element palettes.
// Hold down Ctrl to select multiple elements.
// Press Del to delete elements.
// Press Ctrl-c to copy an element, and to store the whole UML diagram to the system clipboard.
// Select "Custom elements &gt; New..." to create new element types.
//
// This text will be stored with each diagram;  use it for notes.</help_text><zoom_level>5</zoom_level><element><type>com.umlet.element.base.Class</type><coordinates><x>540</x><y>140</y><w>150</w><h>250</h></coordinates><panel_attributes>Wireless Channel
--
Fields:
-- List or Hash: nodes
-- List or Hash: frequencies
-- channelModel
-- double meanSNR
--
Methods:
-- registerNode(Node n):void
-- generateSNR(Node senor, Frequency f):
                                                                double
-- occupyFrequency(frequency freq):void
-- releaseFrequency(frequency freq):void
-- dbToMag(double db):double
-- freeFrequency():frequency
--
Responsibilities
-- All CRNodes should be registered to a
    channel by using registerNode method
    via sending their pointer
-- Registered nodes can use generateSNR
    method to learn their SNR value
-- generateSNR will generate a random SNR
    value according to the channel model
Notes:
-- Channel models can be integer, e.g. 0 for
    AWGN channel, 1 for Rayleigh channel,
    2 for Lognormal channel, etc. But for this
    mini project we must at least implement
    Lognormal channel or any other distance
    dependent channel model.</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>75</x><y>115</y><w>200</w><h>275</h></coordinates><panel_attributes>Cell
--
Fields:
-- CRBase baseStation
-- double radius
-- int number_of_sectors
-- int alpha
-- Uniform uniform
-- ArrayList&lt;Double&gt; set_of_d
--
Methods:
-- deployNode(min_a, max_a, min_d, max_d):Point2D
-- deployNodeinCell():Point2D
-- deployNodeinZone(int sector, int angle, int distance):Point2D
-- getPosition():Point2D
-- setPosition(Point2D pos):void
--
Responsibilities
-- getPosition() returns the position of the base
    station in the cell
-- setPosition() sets the position of the base
    station in the cell
-- deployNodeinZone() returns a random position 
    is a spesific node
-- There are set and get methods for
    other fields
--
Notes:
-- set_of_radius attribute can be a ArrayList
-- Elements of set_of_radius must be ordered
    in ascending order such that
    {d1&lt;d2&lt;d3&lt;...&lt;dn}
-- number_of_sectors should divide 360 w/o
    remainder
-- Alpha must dividie (360/number_of_sectors)
    w/o remainder</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>100</x><y>480</y><w>150</w><h>70</h></coordinates><panel_attributes>CRBase
--
Fields:
--
Methods:
--
Notes:
-- I dont think of any method or additional
    attribute for this class if you have something
    in mind you can add.</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>335</x><y>460</y><w>155</w><h>185</h></coordinates><panel_attributes>CRNode
--
Fields:
-- HashMap&lt;Frequency,SNR&gt; snrValues
-- int id
-- PrintWriter pw
-- ArrayList&lt;Double&gt; averageSnr
--
Methods:
-- sense():void
-- getSNRValues():HashMap&lt;Frequency,SNR&gt;
-- initializeAverageSnr(int nofreq):void
-- logSnrValues():void
-- logAverageSnr(int number_of_crnodes):void
-- createLogFile(String file_name):void
-- writeLogFile(String log_string):void
-- closeLogFile():void
--
Responsibilities:
-- This class senses the wireless channel
    frequencies that are assigned to it.
-- The list of frequencies are given to it by
    constructor parameter as ArrayList object
-- This class creates, writes and closes 
    the log file</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>720</x><y>360</y><w>150</w><h>155</h></coordinates><panel_attributes>PrimaryTrafficGenerator
--
Fields:
-- List or Hash: nodes
--
Methods:
-- registerNode(Node n):void
--
Responsibilities:
-- This class will registers primary user nodes
    and generates random traffic for each of
    by using threads. registerNodes can create
    a thread when a node is registered
-- Random trafic generation should be done
    by assigning the frequencies of the wireless
    channel as occupied
Notes:
-- To create threads another class can be
    implemented or this class can directly
    implement Runnable interface of Java</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>530</x><y>475</y><w>150</w><h>75</h></coordinates><panel_attributes>PrimaryTrafficGeneratorNode
--
Fields:
--
Methods:
-- setRandomPosition():void
--
Responsibilities:
-- setRandomPosition() gets itself a random
   position by calling deployNodeinCell method of
   Cell class.</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>335</x><y>315</y><w>150</w><h>100</h></coordinates><panel_attributes>Node
&lt;Abstract Class&gt;
--
Fields:
-- Point2D position
-- double velocity
--
Methods:
-- set and get methods for fields
Notes:
-- I dont think of any method for this class if
    you have something in mind you can add.
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>325</x><y>35</y><w>160</w><h>255</h></coordinates><panel_attributes>SimulationRunner
--
Fields:
-- public static RandomEngine randomGen
-- public static WirelessChannel wc
-- public static Cell cell
-- public static PrimaryTrafficGenerator priTrafGen
-- public static CRBase crBase
-- public static List crNodes
-- public static List priTrafGenNodes
--
Methods:
-- main(Strings []argv):void
--
Responsibilities:
-- This class may create a cell, a wireless
    channel, a PrimaryTrafficGenerator a
    CRBase, some amount of CRNodes (may
    be parameter), and some amount of
    PrimaryTrafficGeneratorNodes (may be
    parameter).
-- Then it randomly deploys the CRNodes into
    a zone in the cell and registers them to the
    channel.
-- Finally it registers
    PrimaryTrafficGeneratorNodes to the
    PrimaryTrafficGenerator and by doing that
    starts the simulation.
Notes:
-- I dont know how can we do termination of
    simulation. It may go forever or for a
    predetermined time.</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>185</x><y>385</y><w>154</w><h>104</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;extends&gt;&gt;</panel_attributes><additional_attributes>35;95;35;25;145;25</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>370</x><y>400</y><w>65</w><h>69</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;extends&gt;&gt;</panel_attributes><additional_attributes>35;60;35;15</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>470</x><y>385</y><w>180</w><h>99</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;extends&gt;&gt;</panel_attributes><additional_attributes>150;90;150;25;15;25</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>665</x><y>390</y><w>64</w><h>124</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes><additional_attributes>55;15;30;15;30;115;15;115</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>25</x><y>275</y><w>319</w><h>224</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes><additional_attributes>50;15;15;15;15;165;300;165;300;215;310;215</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>10</x><y>260</y><w>529</w><h>410</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes><additional_attributes>65;15;15;15;15;400;500;400;500;240;520;240</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>675</x><y>215</y><w>55</w><h>35</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes><additional_attributes>15;25;45;25</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>465</x><y>220</y><w>84</w><h>269</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes><additional_attributes>75;15;30;15;30;260;25;260</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>260</x><y>275</y><w>115</w><h>35</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instantiates&gt;&gt;</panel_attributes><additional_attributes>15;25;80;25;80;15</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>470</x><y>80</y><w>455</w><h>309</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instantiates&gt;&gt;</panel_attributes><additional_attributes>400;300;420;300;420;15;15;15</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>220</x><y>275</y><w>154</w><h>214</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instantiates&gt;&gt;</panel_attributes><additional_attributes>15;205;15;180;90;180;90;30;145;30;145;15</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>470</x><y>195</y><w>79</w><h>35</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instantiates&gt;&gt;</panel_attributes><additional_attributes>70;25;15;25</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>470</x><y>245</y><w>109</w><h>239</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instantiates&gt;&gt;</panel_attributes><additional_attributes>100;230;100;195;60;195;60;15;15;15</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>450</x><y>275</y><w>95</w><h>194</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instantiates&gt;&gt;</panel_attributes><additional_attributes>15;185;15;170;60;170;60;25;15;25;15;15</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>720</x><y>215</y><w>150</w><h>110</h></coordinates><panel_attributes>PrimaryTrafficGeneratorThread
&lt;&lt;implements Runnable&gt;&gt;
--
Fields:
-- Node: n associated node
-- long simulationDuration
--
Methods
-- generateTraffic():frequency
--
Responsibilities
-- Picks a random frequency and tries to
   occupy it for a random time
-- generateTraffic returns the ID of occupied
   frequency</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>750</x><y>310</y><w>75</w><h>59</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instantiates&gt;&gt;</panel_attributes><additional_attributes>40;15;40;50</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>90</x><y>375</y><w>75</w><h>114</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;instantiates&gt;&gt;</panel_attributes><additional_attributes>40;105;40;15</additional_attributes></element></umlet_diagram>